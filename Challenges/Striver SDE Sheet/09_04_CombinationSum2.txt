import functools

class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        
        candidates = sorted(candidates, reverse = True)
        su = sum(candidates)
        l = len(candidates)
        
        sua = [0 for i in range(l)]
        s = 0
        for i in range(l) :
            s += candidates[i]
            sua[i] = su - s
        ans = set({})
        
        @functools.cache
        def recur(ind, sm, arr) :
            if sm > target or (ind < l and (su - sm) < sua[ind]) : 
                return
            if sm == target : 
                ans.add(arr)
                return
            if ind==l :
                return
            recur(ind+1, sm, arr)
            recur(ind+1, sm+candidates[ind], (*arr, candidates[ind]))
        
        recur(0, 0, ())
        return ans
