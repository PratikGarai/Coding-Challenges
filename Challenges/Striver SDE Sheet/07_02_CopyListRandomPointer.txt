"""
# Definition for a Node.
class Node:
    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):
        self.val = int(x)
        self.next = next
        self.random = random
"""

class Solution:
    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':
        
        if head==None : 
            return None
        l = 0
        curr = head
        while curr : 
            curr = curr.next
            l += 1
        
        ans = [Node(0) for i in range(l)]
        curr = head
        for i in range(l):
            ans[i].val = curr.val
            curr = curr.next
        
        for i in range(l-1) :
            ans[i].next = ans[i+1]
        ans[l-1].next = None
        
        mappings = {}
        curr = head
        for i in range(l):
            if curr.random :
                tmp = curr.random
                t = 0
                while tmp :
                    t += 1
                    tmp = tmp.next
                mappings[i] = t
            else : 
                mappings[i] = None
            curr = curr.next

        for i,j in mappings.items() : 
            if j : 
                ans[i].random = ans[l-j]
                
        return ans[0]
