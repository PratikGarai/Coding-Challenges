#User function Template for python3

class Solution:
    
    #Function to find the maximum profit and the number of jobs done.
    def JobScheduling(self,Jobs,n):
        
        DEADLINE = 100
        
        if n == 0 : 
            return 0, 0
            
        Jobs = sorted(Jobs, key = lambda x : (-x.profit))
        arr = [False for i in range(DEADLINE+1)]
        profit , njobs = 0, 0
        
        for i in range(n) :
            tm = Jobs[i].deadline
            while arr[tm] and tm > 0 :
                tm -= 1
            if tm == 0 :
                continue
            arr[tm] = True
            njobs += 1
            profit += Jobs[i].profit
            
        return njobs, profit

#{ 
#  Driver Code Starts
#Initial Template for Python 3
import atexit
import io
import sys

#Contributed by : Nagendra Jha
class Job:
    '''
    Job class which stores profit and deadline.
    '''
    def __init__(self,profit=0,deadline=0):
        self.profit = profit
        self.deadline = deadline
        self.id = 0

if __name__ == '__main__':
    test_cases = int(input())
    for cases in range(test_cases) :
        n = int(input())
        info = list(map(int,input().strip().split()))
        Jobs = [Job() for i in range(n)]
        for i in range(n):
            Jobs[i].id = info[3*i]
            Jobs[i].deadline = info[3 * i + 1]
            Jobs[i].profit=info[3*i+2]
        ob = Solution()
        res = ob.JobScheduling(Jobs,n)
        print (res[0], end=" ")
        print (res[1])
# } Driver Code Ends
