from collections import defaultdict 

class Solution:
    def findMode(self, root: TreeNode) -> List[int]:
        
        if not root :
            return []
        
        self.d = defaultdict(lambda : 0)
        self.traverse(root)
        self.d = sorted(self.d.items(), key=lambda x : x[1], reverse=True)
        ma = self.d[0][1]
        c = 0
        for i in self.d :
            if i[1]<ma :
                break
            c += 1
            
        return list(map(lambda x : x[0], self.d[:c]))
    
    def traverse(self, node):
        if not node :
            return
        self.d[node.val] += 1
        self.traverse(node.left)
        self.traverse(node.right)
