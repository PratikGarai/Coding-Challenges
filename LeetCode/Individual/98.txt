class Solution:
    def isValidBST(self, root: TreeNode) -> bool:
        
        if not root :
            return True
        
        return self.checkValid(root.left, False, None, True, root.val) and self.checkValid(root.right, True, root.val, False, None)
    
    def checkValid(self, node, mie, miv, mae, mav):
        
        if not node :
            return True
        
        print(node.val, mie, miv, mae, mav)
        if mae:
            if node.val>=mav:
                return False
        if mie :
            if node.val<=miv:
                return False
        
        print("Going to children")
        return self.checkValid(node.left, mie, miv, True, node.val) and self.checkValid(node.right, True, node.val, mae, mav)
