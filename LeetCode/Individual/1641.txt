class Solution:
    def countVowelStrings(self, n: int) -> int:
        
        return self.count(0,0,n)
    
    def count(self, character, index, limit):
        
        if index==limit-1:
            return 5-character
        
        else :
            s = 0
            for i in range(character, 5):
                s += self.count(i, index+1, limit) 
            return s



============= DP SOLUTION ================

class Solution:
    def countVowelStrings(self, n: int) -> int:
        
        dp = [[0 for i in range(5)] for i in range(n)]
        
        for i in range(5):
            dp[0][i] = 1
        
        
        for i in range(1,n):
            for j in range(5):
                s = 0
                for k in range(j,5):
                    s += dp[i-1][k]
                dp[i][j] = s
                
        s = 0
        for i in range(5):
            s += dp[n-1][i]
        
        return s


============== BETTER DP ================

class Solution:
    def countVowelStrings(self, n: int) -> int:
        
        dp = [[0 for i in range(5)] for i in range(n)]
        
        for i in range(5):
            dp[0][i] = 1
        
        for i in range(1,n):
            for j in range(4,-1,-1):
                if j==4 :
                    dp[i][j] = dp[i-1][j]
                else :
                    dp[i][j] = dp[i-1][j]+dp[i][j+1]
                
        s = 0
        for i in range(5):
            s += dp[n-1][i]
        
        return s
