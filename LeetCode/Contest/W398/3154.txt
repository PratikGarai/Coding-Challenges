class Solution:
    def waysToReachStair(self, k: int) -> int:
        memo = {}
        
        def explore(n : int, jump : int = 0, last_red : bool = False) -> int :
            if (n, jump, last_red) in memo :
                return memo[(n, jump, last_red)]
            
            ways = 0
            if n > k+1 :
                return 0
            if n < 0 :
                return 0
            if n==k :
                ways = 1            
            if n==0 :
                ways += explore(n+2**jump , jump+1)
            else :
                if not last_red :
                    ways += explore(n-1, jump, True)
                ways += explore(n+2**jump, jump+1)
            
            memo[(n, jump, last_red)] = ways
            return ways
            
        ways = explore(1)
        
        return ways
            